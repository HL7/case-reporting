<Library xmlns="http://hl7.org/fhir">
   <id value="RuleFilters"></id>
   <meta>
      <versionId value="12"></versionId>
      <lastUpdated value="2021-07-13T19:00:09.009-06:00"></lastUpdated>
      <source value="#T8kgnBem0HEewl6c"></source>
      <profile value="http://hl7.org/fhir/us/ecr/StructureDefinition/us-ph-executable-library"></profile>
      <profile value="http://hl7.org/fhir/us/ecr/StructureDefinition/us-ph-computable-library"></profile>
   </meta>
   <text>
      <status value="generated"></status>
      <div xmlns="http://www.w3.org/1999/xhtml"> 
         <table class="grid dict"> 
            <tr> 
               <th scope="row"> 
                  <b>Id: </b> 
               </th> 
               <td style="padding-left: 25px; padding-right: 25px;">library-RuleFilters-1.0.0</td> 
            </tr> 
            <tr> 
               <th scope="row"> 
                  <b>Type: </b> 
               </th> 
               <td style="padding-right: 25px;"> logic-library </td> 
            </tr> 
            <tr> 
               <th scope="row"> 
                  <b>Version: </b> 
               </th> 
               <td style="padding-left: 25px; padding-right: 25px;">1.0.0</td> 
            </tr> 
            <tr> 
               <th scope="row"> 
                  <b>Status: </b> 
               </th> 
               <td style="padding-left: 25px; padding-right: 25px;">active</td> 
            </tr> 
            <tr style="vertical-align: top;"> 
               <th rowspan="7" scope="row"> 
                  <b>Data Requirements: </b> 
               </th> 
               <td style="padding-left: 25px; padding-right: 25px;"> 
                  <div> 
                     <p style="margin-bottom: 5px;"> 
                        <b>type: </b> 
                        <span>ValueSet</span> 
                     </p> 
                  </div> 
               </td> 
            </tr> 
            <tr style="vertical-align: top;"> 
               <td style="padding-left: 25px; padding-right: 25px;"> 
                  <div> 
                     <p style="margin-bottom: 5px;"> 
                        <b>type: </b> 
                        <span>Observation</span> 
                     </p> 
                  </div> 
               </td> 
            </tr> 
            <tr style="vertical-align: top;"> 
               <td style="padding-left: 25px; padding-right: 25px;"> 
                  <div> 
                     <p style="margin-bottom: 5px;"> 
                        <b>type: </b> 
                        <span>Encounter</span> 
                     </p> 
                  </div> 
               </td> 
            </tr> 
            <tr style="vertical-align: top;"> 
               <td style="padding-left: 25px; padding-right: 25px;"> 
                  <div> 
                     <p style="margin-bottom: 5px;"> 
                        <b>type: </b> 
                        <span>Location</span> 
                     </p> 
                  </div> 
               </td> 
            </tr> 
            <tr style="vertical-align: top;"> 
               <td style="padding-left: 25px; padding-right: 25px;"> 
                  <div> 
                     <p style="margin-bottom: 5px;"> 
                        <b>type: </b> 
                        <span>CodeSystem</span> 
                     </p> 
                  </div> 
               </td> 
            </tr> 
            <tr style="vertical-align: top;"> 
               <td style="padding-left: 25px; padding-right: 25px;"> 
                  <div> 
                     <p style="margin-bottom: 5px;"> 
                        <b>type: </b> 
                        <span>Organization</span> 
                     </p> 
                  </div> 
               </td> 
            </tr> 
            <tr style="vertical-align: top;"> 
               <td style="padding-left: 25px; padding-right: 25px;"> 
                  <div> 
                     <p style="margin-bottom: 5px;"> 
                        <b>type: </b> 
                        <span>Organization</span> 
                     </p> 
                  </div> 
               </td> 
            </tr> 
            <tr style="vertical-align: top;"> 
               <th scope="row"> 
                  <b>Content: </b> 
               </th> 
               <td style="padding-left: 25px; padding-right: 25px;"> 
                  <b>type: </b> 
                  <span>text/cql</span> 
               </td> 
            </tr> 
            <tr> 
               <td colspan="2" style="padding-left: 25px; padding-right: 25px;"> 
                  <pre>
                            <code class="language-cql">library RuleFilters version '1.0.0'

using FHIR version '4.0.0'

include FHIRHelpers version '4.0.0'

codesystem "LOINC": 'http://loinc.org'
codesystem "UsageContext": 'http://terminology.hl7.org/CodeSystem/usage-context-type'
codesystem "JurisdictionsList": 'http://hl7.org/fhir/us/ecr/CodeSystem/ersd-jurisdictions'

// Overall triggering value sets, groupings of all condition-specific value sets, grouped by representation in the information model
valueset "Diagnosis Trigger Codes": 'http://example.org/fhir/ValueSet/valueset-dxtc-example'
valueset "Medication Trigger Codes": 'http://example.org/fhir/ValueSet/valueset-mrtc-example'
valueset "Laboratory Order Trigger Codes": 'http://example.org/fhir/ValueSet/valueset-lotc-example'
valueset "Laboratory Result Trigger Codes": 'http://example.org/fhir/ValueSet/valueset-lrtc-example'
valueset "Organism Substance Trigger Codes": 'http://example.org/fhir/ValueSet/valueset-ostc-example'
valueset "Procedure Trigger Codes": 'http://example.org/fhir/ValueSet/valueset-pctc-example'
valueset "Suspected Disorder Trigger Codes": 'http://example.org/fhir/ValueSet/valueset-sdtc-example'

// Condition-specific triggering codes, these would be listed for each condition
valueset "Chlamydia Laboratory Result Trigger Codes": 'http://example.org/fhir/ValueSet/valueset-chlamydia-example'

// Supplemental (or operational) value sets used in suspected reportability determination logic
valueset "Indeterminate or Equivocal Lab Result Value": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1035'
valueset "Negative or Undetected Lab Result Value": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1034'

code "eICRComposition": '55751-2' from "LOINC"

parameter "Triggering Encounter" Encounter

context Patient

define "Chlamydia Test Results":
  [Observation: "Chlamydia Laboratory Result Trigger Codes"] O
    where O.status in { 'registered', 'preliminary', 'final', 'amended', 'corrected' }

define "Triggering Encounters":
  [Encounter] E

define "Encounter Location References":
  flatten("Triggering Encounters" TriggeringEncounter
    return TriggeringEncounter.location.location)

define "Locations Matching Encounter Location References":
  [Location] Location
    where exists (
        "Encounter Location References" LocationReference
          where ('Location/' + Location.id) ~ LocationReference.reference
      )

define "Encounter Location Address":
  "Locations Matching Encounter Location References" Address
    return Tuple { state: Address.address.state,  postalCode: Address.address.postalCode }

define "Patient Address":
  Patient.address PA
  return Tuple { state: PA.state, postalCode: PA.postalCode }

define "Jurisdictions":
  flatten([CodeSystem] C
    return C.concept Cpt
      return Tuple { jurisdictionCode: Cpt.code,
        definition: Cpt.definition,
        jurisdictionType: Cpt.property P where P.code='type' return P.value as FHIR.string,
        stateCode: Cpt.property P where P.code = 'state' return P.value as FHIR.code,
        postalCode: Cpt.property P where P.code = 'postalcode' return P.value as FHIR.code
        })

define "Encounter Address Postal Code is in Jurisdiction Codes":
  "Jurisdictions" J
    with "Encounter Location Address" LocationAddress
      such that LocationAddress.postalCode in J.postalCode

define "Encounter Address State is in Jurisdiction Codes":
    "Jurisdictions" J
      with "Encounter Location Address" LocationAddress
        such that LocationAddress.state in J.stateCode
          and 'STATE' in J.jurisdictionType

define "Patient Address Postal Code is in Jurisdiction Codes":
  "Jurisdictions" J
    with "Patient Address" PA
      such that PA.postalCode in J.postalCode

define "Patient Address State is in Jurisdiction Codes":
  "Jurisdictions" J
    with "Patient Address" PA
      such that PA.state in J.stateCode
        and 'STATE' in J.jurisdictionType

define "Address Exists in Jurisdiction Codes":
  exists (
    "Encounter Address State is in Jurisdiction Codes"
      union "Encounter Address Postal Code is in Jurisdiction Codes"
        union "Patient Address State is in Jurisdiction Codes"
          union "Patient Address Postal Code is in Jurisdiction Codes"
    )

define function EncounterAddressJurisdictions():
  if exists ("Encounter Address Postal Code is in Jurisdiction Codes")
    then "Encounter Address Postal Code is in Jurisdiction Codes"
      else "Encounter Address State is in Jurisdiction Codes"

define function PatientAddressJurisdictions():
  if exists ("Patient Address Postal Code is in Jurisdiction Codes")
    then "Patient Address Postal Code is in Jurisdiction Codes"
      else "Patient Address State is in Jurisdiction Codes"

define "Jurisdiction Codes Relevant to Encounter Addresses":
  EncounterAddressJurisdictions()

define "Jurisdiction Codes Relevant to Patient Addresses":
  PatientAddressJurisdictions()

define "Indeterminate Chlamydia Test Results":
  "Chlamydia Test Results" O
    let organization: [Organization]
    where (
      (
        exists (
            O.interpretation interpretationConcept
              where interpretationConcept as CodeableConcept in "Indeterminate or Equivocal Lab Result Value"
        )
          or O.value as CodeableConcept in "Indeterminate or Equivocal Lab Result Value"
      )
        and "Address Exists in Jurisdiction Codes"
    )

define "Negative Chlamydia Test Results":
  "Chlamydia Test Results" O
    let organization: [Organization]
    where (
      (
        exists (
            O.interpretation interpretationConcept
              where interpretationConcept as CodeableConcept in "Negative or Undetected Lab Result Value"
        )
          or O.value as CodeableConcept in "Negative or Undetected Lab Result Value"
      )
        and "Address Exists in Jurisdiction Codes"
    )

define "Reportable Triggering Codes":
  flatten ("Indeterminate Chlamydia Test Results" O return O.code.coding)
    union flatten ("Negative Chlamydia Test Results" O return O.code.coding)
    // ... reportable triggering codes for other conditions

define "Is Reportable":
  exists (
    "Reportable Triggering Codes"
      except "Existing Reportable Triggering Codes"
    )

define "Existing Reportable Triggering Codes":
  flatten (
    "eICR Compositions" C
      return
        C.section.entry.extension E
          where E.url = 'http://hl7.org/fhir/us/ecr/StructureDefinition/eicr-trigger-code-flag-extension'
            return (singleton from (E.extension SE where SE.url = 'triggerCode')).value as Coding
  )

define "Is Encounter In Progress":
  not IsNull (
    "Triggering Encounter" E
      where E.status ~ 'in-progress'
  ) or exists (
      "Triggering Encounters" E
        where E.status ~ 'in-progress'
    )

define "Is Encounter Complete":
  not IsNull (
    "Triggering Encounter" E
      where E.status ~ 'finished'
  ) or exists (
      "Triggering Encounters" E
        where E.status ~ 'finished'
    )
define "Is Encounter In Progress or 72h or less after end of encounter?":
  "Is Encounter In Progress"
    or (not IsNull("Triggering Encounter") and "Triggering Encounter".period.end 72 hours or less before Now())
    or (exists ("Triggering Encounters") and singleton from "Triggering Encounters".period.end 72 hours or less before Now())

define "eICR Compositions":
  [Composition : "eICRComposition"]

define "Most recent eICR sent over 72 hours ago?":
  First("eICR Compositions" eICRs
    where eICRs.date 72 hours or more before Now()
    sort by date desc)
</code>
                        </pre> 
               </td> 
            </tr> 
         </table> 
      </div>
   </text>
   <url value="http://example.org/fhir/Library/RuleFilters"></url>
   <version value="1.0.0"></version>
   <name value="RuleFilters"></name>
   <title value="Rule Filters"></title>
   <status value="active"></status>
   <experimental value="true"></experimental>
   <type>
      <coding>
         <system value="http://terminology.hl7.org/CodeSystem/library-type"></system>
         <code value="logic-library"></code>
      </coding>
   </type>
   <publisher value="{site.data.fhir.ig.publisher}"></publisher>
   <description value="An example logic library for eRSD - Chlamydia example."></description>
   <jurisdiction>
      <coding>
         <system value="urn:iso:std:iso:3166"></system>
         <code value="US"></code>
         <display value="United States of America"></display>
      </coding>
      <text value="United States of America"></text>
   </jurisdiction>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="FHIR model information"></display>
      <resource value="http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Library FHIRHelpers"></display>
      <resource value="http://fhir.org/guides/cdc/opioid-cds/Library/FHIRHelpers|4.0.1"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Code system LOINC"></display>
      <resource value="http://loinc.org"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Code system UsageContext"></display>
      <resource value="http://hl7.org/fhir/us/ecr/CodeSystem/us-ph-usage-context-type"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Code system JurisdictionsList"></display>
      <resource value="http://example.org/fhir/CodeSystem/ersd-jurisdictions-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Diagnosis Trigger Codes"></display>
      <resource value="http://example.org/fhir/ValueSet/valueset-dxtc-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Medication Trigger Codes"></display>
      <resource value="http://example.org/fhir/ValueSet/valueset-mrtc-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Laboratory Order Trigger Codes"></display>
      <resource value="http://example.org/fhir/ValueSet/valueset-lotc-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Laboratory Result Trigger Codes"></display>
      <resource value="http://example.org/fhir/ValueSet/valueset-lrtc-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Organism Substance Trigger Codes"></display>
      <resource value="http://example.org/fhir/ValueSet/valueset-ostc-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Procedure Trigger Codes"></display>
      <resource value="http://example.org/fhir/ValueSet/valueset-pctc-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Suspected Disorder Trigger Codes"></display>
      <resource value="http://example.org/fhir/ValueSet/valueset-sdtc-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Chlamydia Laboratory Result Trigger Codes"></display>
      <resource value="http://example.org/fhir/ValueSet/valueset-chlamydia-example"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Indeterminate or Equivocal Lab Result Value"></display>
      <resource value="http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1035"></resource>
   </relatedArtifact>
   <relatedArtifact>
      <type value="depends-on"></type>
      <display value="Value set Negative or Undetected Lab Result Value"></display>
      <resource value="http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1146.1034"></resource>
   </relatedArtifact>
   <parameter>
      <name value="Triggering Encounter"></name>
      <use value="in"></use>
      <min value="0"></min>
      <max value="1"></max>
      <type value="Encounter"></type>
   </parameter>
   <parameter>
      <name value="Patient"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="1"></max>
      <type value="Patient"></type>
   </parameter>
   <parameter>
      <name value="Chlamydia Test Results"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Observation"></type>
   </parameter>
   <parameter>
      <name value="Triggering Encounters"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Encounter"></type>
   </parameter>
   <parameter>
      <name value="Encounter Location References"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Reference"></type>
   </parameter>
   <parameter>
      <name value="Locations Matching Encounter Location References"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Location"></type>
   </parameter>
   <parameter>
      <name value="Encounter Location Address"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Patient Address"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Jurisdictions"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Encounter Address Postal Code is in Jurisdiction Codes"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Encounter Address State is in Jurisdiction Codes"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Patient Address Postal Code is in Jurisdiction Codes"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Patient Address State is in Jurisdiction Codes"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Address Exists in Jurisdiction Codes"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="1"></max>
      <type value="boolean"></type>
   </parameter>
   <parameter>
      <name value="Jurisdiction Codes Relevant to Encounter Addresses"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Jurisdiction Codes Relevant to Patient Addresses"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Any"></type>
   </parameter>
   <parameter>
      <name value="Indeterminate Chlamydia Test Results"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Observation"></type>
   </parameter>
   <parameter>
      <name value="Negative Chlamydia Test Results"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Observation"></type>
   </parameter>
   <parameter>
      <name value="Reportable Triggering Codes"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Coding"></type>
   </parameter>
   <parameter>
      <name value="eICR Compositions"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Composition"></type>
   </parameter>
   <parameter>
      <name value="Existing Reportable Triggering Codes"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="*"></max>
      <type value="Coding"></type>
   </parameter>
   <parameter>
      <name value="Is Reportable"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="1"></max>
      <type value="boolean"></type>
   </parameter>
   <parameter>
      <name value="Is Encounter In Progress"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="1"></max>
      <type value="boolean"></type>
   </parameter>
   <parameter>
      <name value="Is Encounter Complete"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="1"></max>
      <type value="boolean"></type>
   </parameter>
   <parameter>
      <name value="Is Encounter In Progress or 72h or less after end of encounter?"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="1"></max>
      <type value="boolean"></type>
   </parameter>
   <parameter>
      <name value="Most recent eICR sent over 72 hours ago?"></name>
      <use value="out"></use>
      <min value="0"></min>
      <max value="1"></max>
      <type value="Composition"></type>
   </parameter>
   <dataRequirement>
      <type value="Patient"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Patient"></profile>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="state"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="CodeSystem"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/CodeSystem"></profile>
      <mustSupport value="jurisdictionType"></mustSupport>
      <mustSupport value="concept"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="stateCode"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Encounter"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Encounter"></profile>
      <mustSupport value="reference"></mustSupport>
      <mustSupport value="location"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Patient"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Patient"></profile>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="state"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="CodeSystem"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/CodeSystem"></profile>
      <mustSupport value="jurisdictionType"></mustSupport>
      <mustSupport value="concept"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="stateCode"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Encounter"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Encounter"></profile>
      <mustSupport value="reference"></mustSupport>
      <mustSupport value="location"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Composition"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Composition"></profile>
      <mustSupport value="date"></mustSupport>
      <mustSupport value="type"></mustSupport>
      <codeFilter>
         <path value="type"></path>
         <code>
            <system value="http://loinc.org"></system>
            <code value="55751-2"></code>
         </code>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="Encounter"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Encounter"></profile>
   </dataRequirement>
   <dataRequirement>
      <type value="Location"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Location"></profile>
      <mustSupport value="address.postalCode"></mustSupport>
      <mustSupport value="address"></mustSupport>
      <mustSupport value="address.state"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="state"></mustSupport>
      <mustSupport value="id"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="CodeSystem"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/CodeSystem"></profile>
      <mustSupport value="jurisdictionType"></mustSupport>
      <mustSupport value="concept"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="stateCode"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Location"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Location"></profile>
      <mustSupport value="address.postalCode"></mustSupport>
      <mustSupport value="address"></mustSupport>
      <mustSupport value="address.state"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="state"></mustSupport>
      <mustSupport value="id"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Encounter"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Encounter"></profile>
      <mustSupport value="status"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Encounter"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Encounter"></profile>
      <mustSupport value="period"></mustSupport>
      <mustSupport value="end"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Encounter"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Encounter"></profile>
      <mustSupport value="period"></mustSupport>
      <mustSupport value="end"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Composition"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Composition"></profile>
      <mustSupport value="section"></mustSupport>
      <mustSupport value="type"></mustSupport>
      <codeFilter>
         <path value="type"></path>
         <code>
            <system value="http://loinc.org"></system>
            <code value="55751-2"></code>
         </code>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="Organization"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Organization"></profile>
   </dataRequirement>
   <dataRequirement>
      <type value="Observation"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Observation"></profile>
      <mustSupport value="code"></mustSupport>
      <mustSupport value="interpretation"></mustSupport>
      <mustSupport value="value"></mustSupport>
      <mustSupport value="status"></mustSupport>
      <codeFilter>
         <path value="code"></path>
         <valueSet value="http://example.org/fhir/ValueSet/valueset-chlamydia-example"></valueSet>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="Observation"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Observation"></profile>
      <mustSupport value="code"></mustSupport>
      <mustSupport value="interpretation"></mustSupport>
      <mustSupport value="value"></mustSupport>
      <mustSupport value="status"></mustSupport>
      <codeFilter>
         <path value="code"></path>
         <valueSet value="http://example.org/fhir/ValueSet/valueset-chlamydia-example"></valueSet>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="CodeSystem"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/CodeSystem"></profile>
      <mustSupport value="jurisdictionType"></mustSupport>
      <mustSupport value="concept"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="stateCode"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Location"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Location"></profile>
      <mustSupport value="address.postalCode"></mustSupport>
      <mustSupport value="address"></mustSupport>
      <mustSupport value="address.state"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="state"></mustSupport>
      <mustSupport value="id"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Organization"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Organization"></profile>
   </dataRequirement>
   <dataRequirement>
      <type value="Observation"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Observation"></profile>
      <mustSupport value="code"></mustSupport>
      <mustSupport value="interpretation"></mustSupport>
      <mustSupport value="value"></mustSupport>
      <mustSupport value="status"></mustSupport>
      <codeFilter>
         <path value="code"></path>
         <valueSet value="http://example.org/fhir/ValueSet/valueset-chlamydia-example"></valueSet>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="Location"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Location"></profile>
      <mustSupport value="address.postalCode"></mustSupport>
      <mustSupport value="address"></mustSupport>
      <mustSupport value="address.state"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="state"></mustSupport>
      <mustSupport value="id"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Patient"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Patient"></profile>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="state"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="Composition"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Composition"></profile>
      <mustSupport value="type"></mustSupport>
      <codeFilter>
         <path value="type"></path>
         <code>
            <system value="http://loinc.org"></system>
            <code value="55751-2"></code>
         </code>
      </codeFilter>
   </dataRequirement>
   <dataRequirement>
      <type value="Patient"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Patient"></profile>
   </dataRequirement>
   <dataRequirement>
      <type value="Encounter"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/Encounter"></profile>
      <mustSupport value="status"></mustSupport>
   </dataRequirement>
   <dataRequirement>
      <type value="CodeSystem"></type>
      <profile value="http://hl7.org/fhir/StructureDefinition/CodeSystem"></profile>
      <mustSupport value="jurisdictionType"></mustSupport>
      <mustSupport value="concept"></mustSupport>
      <mustSupport value="postalCode"></mustSupport>
      <mustSupport value="stateCode"></mustSupport>
   </dataRequirement>
   <content>
      <contentType value="text/cql"></contentType>
      <data value=""></data>
   </content>
   <content>
      <contentType value="application/elm+xml"></contentType>
      <data value=""></data>
   </content>
   <content>
      <contentType value="application/elm+json"></contentType>
      <data value=""></data>
   </content>
</Library>