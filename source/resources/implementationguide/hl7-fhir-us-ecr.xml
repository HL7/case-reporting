<?xml version="1.0" encoding="UTF-8"?>
<ImplementationGuide
    xmlns="http://hl7.org/fhir">
    <id value="hl7-fhir-us-ecr"/>
    <meta>
        <versionId value="72"/>
        <lastUpdated value="2019-05-05T15:37:14.000-04:00"/>
    </meta>
    <contained>
        <Binary>
            <id value="8654"/>
            <contentType value="text/markdown"/>
            <content value=""/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="7895"/>
            <contentType value="text/markdown"/>
            <content value="IyMjIFZhbHVlIFNldHM6IEtub3dsZWRnZSBEaXN0cmlidXRpb24gVHJhbnNhY3Rpb24KCi0gW09yZ2FuaXNtX1N1YnN0YW5jZSBUcmlnZ2VycyBmb3IgUHVibGljIEhlYWx0aCBSZXBvcnRpbmddKFZhbHVlU2V0LW9zdGMuaHRtbCkKLSBbTGFiIE9icyBUZXN0IE5hbWUgVHJpZ2dlcnMgZm9yIFB1YmxpYyBIZWFsdGggUmVwb3J0aW5nXShWYWx1ZVNldC1scnRjLmh0bWwpCi0gW0xhYiBPcmRlciBUZXN0IE5hbWUgVHJpZ2dlcnMgZm9yIFB1YmxpYyBIZWFsdGggUmVwb3J0aW5nXShWYWx1ZVNldC1sb3RjLmh0bWwpCi0gW0RpYWdub3Npc19Qcm9ibGVtIFRyaWdnZXJzIGZvciBQdWJsaWMgSGVhbHRoIFJlcG9ydGluZ10oVmFsdWVTZXQtZHh0Yy5odG1sKQogIAoKQSBidW5kbGUgY29udGFpbmluZyBhbGwgdGhlIHRyaWdnZXIgY29kZSB2YWx1ZSBzZXRzIChhbmQgdGhlIFBsYW5EZWZpbml0aW9uKSBpcyBhbHNvIGluY2x1ZGVkIGluIHRoaXMgZ3VpZGUuCi0gW0tub3dsZWdlIERpc3RyaWJ1dGlvbiBCdW5kbGVdKEJ1bmRsZS1lY3ItYnVuZGxlLWtub3dsZWRnZS1kaXN0cmlidXRpb24uaHRtbCkKCi0tLQoKCiMjIyBWYWx1ZSBTZXRzOiBlSUNSIFRyYW5zYWN0aW9uCgotIFtHZW9ncmFwaGljYWwgTG9jYXRpb24gSGlzdG9yeV0oVmFsdWVTZXQtZ2VvZ3JhcGhpY2FsLWxvY2F0aW9uLWhpc3RvcnkuaHRtbCkgKFtQSElOIFZBRFMgTGlua10oaHR0cHM6Ly9waGludmFkcy5jZGMuZ292L3ZhZHMvVmlld1ZhbHVlU2V0LmFjdGlvbj9vaWQ9Mi4xNi44NDAuMS4xMTQyMjIuNC4xMS4zMjAxKSkKLSBbVVMgU3RhbmRhcmQgT2NjdXBhdGlvbmFsIENsYXNzaWZpY2F0aW9uXShWYWx1ZVNldC1vZXMuaHRtbCkKLSBbUHJlZ25hbmN5IFN0YXR1c10oVmFsdWVTZXQtcHJlZ25hbmN5LXN0YXR1cy5odG1sKQogIAotLS0KCgojIyMgVmFsdWUgU2V0czogUmVwb3J0YWJpbGl0eSBSZXNwb25zZSBUcmFuc2FjdGlvbgoKVGhlIGZvbGxvd2luZyB2YWx1ZSBzZXRzIGhhdmUgYmVlbiBkZWZpbmVkIGZvciB0aGUgUmVwb3J0YWJpbGl0eSBSZXNwb25zZSB0cmFuc2FjdGlvbnMuCi0gW0xvY2F0aW9uIFJlbGV2YW5jZSAoZUNSKV0oVmFsdWVTZXQtbG9jYXRpb24tcmVsZXZhbmNlLWVjci5odG1sKSAoW1BISU4gVkFEUyBsaW5rXShodHRwczovL3BoaW52YWRzLmNkYy5nb3YvdmFkcy9WaWV3VmFsdWVTZXQuYWN0aW9uP2lkPUM4MUJGNEE4LUY2OEYtNEU0NS05MENCLTQ3OTVCRjM2MUE2OCkpCi0gW2VJQ1IgUHJvY2Vzc2luZyBTdGF0dXMgKGVDUildKFZhbHVlU2V0LWVpY3ItcHJvY2Vzc2luZy1zdGF0dXMtZWNyLmh0bWwpIChbUEhJTiBWQURTIGxpbmtdKGh0dHBzOi8vcGhpbnZhZHMuY2RjLmdvdi92YWRzL1ZpZXdWYWx1ZVNldC5hY3Rpb24/aWQ9QzE2NkI0QTgtMERGMC00NjlCLUI2NzgtQ0RBQjY5ODVBQTREKSkKLSBbZUlDUiBQcm9jZXNzaW5nIFN0YXR1cyBSZWFzb24gKGVDUildKFZhbHVlU2V0LWVpY3ItcHJvY2Vzc2luZy1zdGF0dXMtcmVhc29uLWVjci5odG1sKSAoW1BISU4gVkFEUyBsaW5rXShodHRwczovL3BoaW52YWRzLmNkYy5nb3YvdmFkcy9WaWV3VmFsdWVTZXQuYWN0aW9uP2lkPTdBNUJCNDI0LTNCOTgtNEExMy05RDA4LTU3NTM4RjNFNjMwRSkpCi0gW2VJQ1IgUHJvY2Vzc2luZyBTdGF0dXMgUmVhc29uIERldGFpbCBUeXBlIChlQ1IpXShWYWx1ZVNldC1laWNyLXByb2Nlc3Npbmctc3RhdHVzLXJlYXNvbi1kZXRhaWwtdHlwZS1lY3IuaHRtbCkgKFtQSElOIFZBRFMgbGlua10oaHR0cHM6Ly9waGludmFkcy5jZGMuZ292L3ZhZHMvVmlld1ZhbHVlU2V0LmFjdGlvbj9pZD0zQzlGMTY1NC0xQ0VCLUU3MTEtQUNENi0wMDE3QTQ3NzA0MUEpKQotIFtSZXBvcnRhYmlsaXR5IFByaW9yaXR5IChlQ1IpXShWYWx1ZVNldC1yZXBvcnRhYmlsaXR5LXByaW9yaXR5LWVjci5odG1sKSAoW1BISU4gVkFEUyBsaW5rXShodHRwczovL3BoaW52YWRzLmNkYy5nb3YvdmFkcy9WaWV3VmFsdWVTZXQuYWN0aW9uP2lkPTZCNjVENTMxLUM4ODgtNDg2Qi05RUMyLTQ1NzFGRTkwMzdCNSkpCi0gW0V4dGVybmFsIFJlc291cmNlIFR5cGUgKGVDUildKFZhbHVlU2V0LWV4dGVybmFsLXJlc291cmNlLXR5cGUtZWNyLmh0bWwpIChbUEhJTiBWQURTIGxpbmtdKGh0dHBzOi8vcGhpbnZhZHMuY2RjLmdvdi92YWRzL1ZpZXdWYWx1ZVNldC5hY3Rpb24/aWQ9RDgxMDEzNzktMDFCNS00Nzg0LUEzQkYtNThBNkIzREZEMTk1KSkKLSBbRGV0ZXJtaW5hdGlvbiBvZiBSZXBvcnRhYmlsaXR5IChlQ1IpXShWYWx1ZVNldC1kZXRlcm1pbmF0aW9uLW9mLXJlcG9ydGFiaWxpdHktZWNyLmh0bWwpIChbUEhJTiBWQURTIGxpbmtdKGh0dHBzOi8vcGhpbnZhZHMuY2RjLmdvdi92YWRzL1ZpZXdWYWx1ZVNldC5hY3Rpb24/aWQ9RkVCRTgxRDctOTdCNC00RDJFLUEzMjYtMTlEOUJCRjNERTlEKSkKCgojIyBDb2RlIFN5c3RlbXMKLSBbUEhJTiBWUyAoQ0RDIExvY2FsIENvZGluZyBTeXN0ZW0pXShodHRwczovL3BoaW52YWRzLmNkYy5nb3YvdmFkcy9WaWV3Q29kZVN5c3RlbS5hY3Rpb24/aWQ9Mi4xNi44NDAuMS4xMTQyMjIuNC41LjI3NCMpCi0gW1BISU4gUXVlc3Rpb25zIChDREMgTG9jYWwgQ29kaW5nIFN5c3RlbSldKGh0dHBzOi8vcGhpbnZhZHMuY2RjLmdvdi92YWRzL1ZpZXdDb2RlU3lzdGVtLmFjdGlvbj9pZD0yLjE2Ljg0MC4xLjExNDIyMi40LjUuMjMyIykKLSBbU05PTUVEIENUXShodHRwOi8vc25vbWVkLmluZm8vc2N0KQotIFtMT0lOQ10oaHR0cDovL2xvaW5jLm9yZykKLSBbQ0RDIFZhY2NpbmUgQ29kZSAoQ1ZYKV0oaHR0cDovL2hsNy5vcmcvZmhpci9zaWQvY3Z4KQotIFtDUFQ0XShodHRwOi8vd3d3LmFtYS1hc3NuLm9yZy9nby9jcHQpCi0gW0RDTV0oaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ00pCi0gW0ZJUFMgNS0yIChTdGF0ZSldKGh0dHBzOi8vd3d3LmNlbnN1cy5nb3YvZ2VvL3JlZmVyZW5jZS9hbnNpX3N0YXRldGFibGVzLmh0bWwpCi0gW0hlYWx0aGNhcmUgUHJvdmlkZXIgVGF4b25vbXkgKEhJUEFBKV0oaHR0cDovL3d3dy5udWNjLm9yZy9pbmRleC5waHAvY29kZS1zZXRzLW1haW5tZW51LTQxL3Byb3ZpZGVyLXRheG9ub215LW1haW5tZW51LTQwL2Nzdi1tYWlubWVudS01NykKLSBbSElUU1AtQ1MtODNdKGh0dHA6Ly9oaXRzcC5vcmcvQ29uc3RydWN0U2V0X0RldGFpbHMuYXNweD8mUHJlZml4QWxwaGE9NCZQcmVmaXhOdW1lcmljPTgzKQotIFtITDcgSGVhbHRoY2FyZVNlcnZpY2VMb2NhdGlvbl0oaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL3YzL0hlYWx0aGNhcmVTZXJ2aWNlTG9jYXRpb24pCi0gW0hMN0FjdENsYXNzXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvQWN0Q2xhc3MpCi0gW0hMN0FjdENvZGVdKGh0dHBzOi8vd3d3LmhsNy5vcmcvZmhpci92My9BY3RDb2RlKQotIFtITDdBY3RNb29kXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvQWN0TW9vZCkKLSBbSEw3QWN0UHJpb3JpdHldKGh0dHBzOi8vd3d3LmhsNy5vcmcvZmhpci92My9BY3RQcmlvcml0eSkKLSBbSEw3QWN0UmVhc29uXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvQWN0UmVhc29uKQotIFtITDdBY3RSZWxhdGlvbnNoaXBUeXBlXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvQWN0UmVsYXRpb25zaGlwVHlwZSkKLSBbSEw3QWN0U3RhdHVzXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvQWN0U3RhdHVzKQotIFtITDdBZGRyZXNzVXNlXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvQWRkcmVzc1VzZSkKLSBbSEw3QWRtaW5pc3RyYXRpdmVHZW5kZXJdKGh0dHBzOi8vd3d3LmhsNy5vcmcvZmhpci92My9BZG1pbmlzdHJhdGl2ZUdlbmRlcikKLSBbSEw3Q29uZmlkZW50aWFsaXR5XShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvQ29uZmlkZW50aWFsaXR5KQotIFtITDdFbnRpdHlDbGFzc10oaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL3YzL0VudGl0eUNsYXNzKQotIFtITDdFbnRpdHlOYW1lUGFydFF1YWxpZmllcl0oaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL3YzL0VudGl0eU5hbWVQYXJ0UXVhbGlmaWVyKQotIFtITDdFbnRpdHlOYW1lVXNlXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvRW50aXR5TmFtZVVzZSkKLSBbSEw3TGFuZ3VhZ2VBYmlsaXR5TW9kZV0oaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL3YzL0xhbmd1YWdlQWJpbGl0eU1vZGUpCi0gW0hMN0xhbmd1YWdlQWJpbGl0eVByb2ZpY2llbmN5XShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvTGFuZ3VhZ2VBYmlsaXR5UHJvZmljaWVuY3kpCi0gW0hMN01hcml0YWxTdGF0dXNdKGh0dHBzOi8vd3d3LmhsNy5vcmcvZmhpci92My9NYXJpdGFsU3RhdHVzKQotIFtITDdPYnNlcnZhdGlvblZhbHVlXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvT2JzZXJ2YXRpb25WYWx1ZSkKLSBbSEw3UGFydGljaXBhdGlvbkZ1bmN0aW9uXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvUGFydGljaXBhdGlvbkZ1bmN0aW9uKQotIFtITDdQYXJ0aWNpcGF0aW9uU2lnbmF0dXJlXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvUGFydGljaXBhdGlvblNpZ25hdHVyZSkKLSBbSEw3UGFydGljaXBhdGlvblR5cGVdKGh0dHBzOi8vd3d3LmhsNy5vcmcvZmhpci92My9QYXJ0aWNpcGF0aW9uVHlwZSkKLSBbSEw3UmFjZV0oaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL3YzL1JhY2UpCi0gW0hMN1JlbGlnaW91c0FmZmlsaWF0aW9uXShodHRwczovL3d3dy5obDcub3JnL2ZoaXIvdjMvUmVsaWdpb3VzQWZmaWxpYXRpb24pCi0gW0hMN1JvbGVDbGFzc10oaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL3YzL1JvbGVDbGFzcykKLSBbSEw3Um9sZUNvZGVdKGh0dHBzOi8vd3d3LmhsNy5vcmcvZmhpci92My9Sb2xlQ29kZSkKLSBbSUNELTEwLUNNXShodHRwOi8vd3d3Lndoby5pbnQvY2xhc3NpZmljYXRpb25zL2ljZC9lbi8pCi0gW0lTTyAzMTY2IFBhcnQgMSBDb3VudHJ5IENvZGVzLCAybmQgRWRpdGlvbiwgQWxwaGEtMl0oaHR0cDovL3d3dy5pc28ub3JnL2lzby9jb3VudHJ5X2NvZGVzLmh0bSkKLSBbTGFuZ3VhZ2VdKGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL2JjcDQ3KQotIFtOQ0kgVGhlc2F1cnVzIChOQ0l0KV0oaHR0cDovL25jaW1ldGEubmNpLm5paC5nb3YpCi0gW05ERlJUXShodHRwOi8vaGw3Lm9yZy9maGlyL25kZnJ0KQotIFtOVUJDIFVCLTA0IFBhdGllbnQgRGlzY2hhcmdlIFN0YXR1c10oaHR0cDovL3d3dy5udWJjLm9yZykKLSBbUEhJTiBRdWVzdGlvbnNdKGh0dHBzOi8vcGhpbnZhZHMuY2RjLmdvdi92YWRzL1ZpZXdDb2RlU3lzdGVtLmFjdGlvbj9pZD0yLjE2Ljg0MC4xLjExNDIyMi40LjUuMjMyKQotIFtSYWNlICYgRXRobmljaXR5IC0gQ0RDXShodHRwczovL3BoaW52YWRzLmNkYy5nb3YvdmFkcy9WaWV3Q29kZVN5c3RlbS5hY3Rpb24/aWQ9Mi4xNi44NDAuMS4xMTM4ODMuNi4yMzgpCi0gW1J4Tm9ybV0oaHR0cDovL3d3dy5ubG0ubmloLmdvdi9yZXNlYXJjaC91bWxzL3J4bm9ybSkKLSBbU291cmNlIG9mIFBheW1lbnQgVHlwb2xvZ3kgKFBIRFNDKV0oaHR0cDovL3d3dy5waGRzYy5vcmcvc3RhbmRhcmRzL3BheWVyLXR5cG9sb2d5LmFzcCkKLSBbVUNVTV0oaHR0cDovL3VuaXRzb2ZtZWFzdXJlLm9yZykKLSBbVW5pcXVlIEluZ3JlZGllbnQgSWRlbnRpZmllciAoVU5JSSldKGh0dHA6Ly9mZGFzaXMubmxtLm5paC5nb3Yp"/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="7834"/>
            <contentType value="text/markdown"/>
            <content value="VGhlIGZvbGxvd2luZyBDYXBhYmlsaXR5U3RhdGVtZW50cyBkZWZpbmUgdGhlIGNvbmZvcm1hbmNlIHJlcXVpcmVtZW50cyBmb3IgdGhpcyBpbXBsZW1lbnRhdGlvbiBndWlkZS4KCiMjIyBLbm93bGVkZ2UgTWFuYWdlbWVudCBUcmFuc2FjdGlvbgoKVGhpcyBzZWN0aW9uIGRlc2NyaWJlcyB0aGUgZXhwZWN0ZWQgY2FwYWJpbGl0aWVzIG9mIGEgc2VydmVyIHRoYXQgc3RvcmVzIHRoZSBLbm93bGVkZ2UgTWFuYWdlbWVudCByZXNvdXJjZXMgaW5jbHVkaW5nIHRoZSBSZXBvcnRhYmxlIENvbmRpdGlvbnMgVHJpZ2dlciBDb2RlcyAoUkNUQykuICAKCiMjIyMgQ29uZm9ybWFuY2UgcmVxdWlyZW1lbnRzIGZvciB0aGUgS25vd2xlZGdlIE1hbmFnZW1lbnQgU2VydmVyCgpUaGUgS25vd2xlZGdlIE1hbmFnZW1lbnQgU2VydmVyICoqU0hBTEwqKjoKCjEuIFN0b3JlIGFsbCBvZiB0aGUgS25vd2xlZGdlIE1hbmFnZW1lbnQgcmVzb3VyY2VzIGFuZCB2YWx1ZSBzZXRzIGFzIGEgUGxhbkRlZmluaXRvbiBidW5kbGUgYW5kIGluY2x1ZGVkIFJDVEMgVmFsdWVTZXRzLgoxLiBJbXBsZW1lbnQgdGhlIFJFU1RmdWwgYmVoYXZpb3IgYWNjb3JkaW5nIHRvIHRoZSBGSElSIHNwZWNpZmljYXRpb24uCjEuIFJldHVybiB0aGUgZm9sbG93aW5nIHJlc3BvbnNlIGNsYXNzZXM6CiAgIC0gKFN0YXR1cyAyMDApOiBzdWNjZXNzZnVsIG9wZXJhdGlvbgogICAtIChTdGF0dXMgNDAwKTogaW52YWxpZCBwYXJhbWV0ZXIKICAgLSAoU3RhdHVzIDQwMS80eHgpOiB1bmF1dGhvcml6ZWQgcmVxdWVzdAogICAtIChTdGF0dXMgNDAzKTogaW5zdWZmaWNpZW50IHNjb3BlCiAgIC0gKFN0YXR1cyA0MDQpOiB1bmtub3duIHJlc291cmNlCiAgIC0gKFN0YXR1cyA0MTApOiBkZWxldGVkIHJlc291cmNlLgoxLiBTdXBwb3J0ICpqc29uKiBhbmQgKnhtbCogcmVzb3VyY2UgZm9ybWF0cyBmb3IgYWxsIEtub3dsZWRnZSBNYW5hZ2VtZW50IGludGVyYWN0aW9ucy4KMS4gRGVjbGFyZSBhIENhcGFiaWxpdHlTdGF0ZW1lbnQgaWRlbnRpZnlpbmcgdGhlIGxpc3Qgb2YgcHJvZmlsZXMsIG9wZXJhdGlvbnMsIHNlYXJjaCBwYXJhbWV0ZXIgc3VwcG9ydGVkLgoKVGhlIEtub3dsZWRnZSBNYW5hZ2VtZW50IFNlcnZlciAqKlNIT1VMRCoqOgoKMS4gU3VwcG9ydCBjbGllbnRzIGNyZWF0aW5nIGFuZCB1cGRhdGluZyBTdWJzY3JpcHRpb24gcmVzb3VyY2UgZm9yIHRoZSBLbm93bGVkZ2UgTWFuYWdlbWVudCBQbGFuRGVmaW5pdGlvbiBidW5kbGUsIHJlc291cmNlcywgYW5kIFJDVEMgVmFsdWVTZXRzLgoxLiBJbXBsZW1lbnQgU3Vic2NyaXB0aW9uIHNlcnZpY2VzIHBlciB0aGUgRkhJUiBzcGVjaWZpY2F0aW9uLgoKCiMjIyMgQ29uZm9ybWFuY2UgcmVxdWlyZW1lbnRzIGZvciBhbiBLbm93bGVkZ2UgTWFuYWdlbWVudCBDbGllbnQKClRoZSBLbm93bGVkZ2UgTWFuYWdlbWVudCBDbGllbnQgKipTSEFMTCoqOgoKLSBTdXBwb3J0IGZldGNoaW5nIHRoZSBLbm93bGVkZ2UgTWFuYWdlbWVudCBQbGFuRGVmaW5pdGlvbiBCdW5kbGUgYW5kIFJDVEMgVmFsdWVTZXQgcmVzb3VyY2VzIHVzaW5nIHRoZSBzdXBwb3J0ZWQgUkVTVGZ1bCBpbnRlcmFjdGlvbnMgYW5kIHNlYXJjaCBwYXJhbWV0ZXJzIGRlY2xhcmVkIGluIHRoZSBLbm93bGVkZ2UgTWFuYWdlbWVudCBTZXJ2ZXIgQ2FwYWJpbGl0eVN0YXRlbWVudC4KClRoZSBLbm93bGVkZ2UgTWFuYWdlbWVudCBDbGllbnQgKipTSE9VTEQqKjoKCi0gU3VwcG9ydCBjcmVhdGluZyBhbmQgdXBkYXRpbmcgU3Vic2NyaXB0aW9uIHJlc291cmNlcyBvbiB0aGUgS25vd2xlZGdlIE1hbmFnZW1lbnQgc2VydmVyLgotIFN1cHBvcnQgcmVjZWl2aW5nIHVwZGF0ZXMgdG8gc3Vic2NyaXB0aW9ucyB1c2luZyBvbmUgb3IgbW9yZSBvZiB0aGUgbWV0aG9kcyBkZXNjcmliZWQgaW4gdGhlIEZISVIgc3BlY2lmaWNhdGlvbi4KCgojIyMgZUlDUiBUcmFuc2FjdGlvbgp7JSBpbmNsdWRlIGxpc3Qtc2ltcGxlLWNhcGFiaWxpdHlzdGF0ZW1lbnRzLnhodG1sICV9CiMjIyBSZXBvcnRhYmlsaXR5IFJlc3BvbnNlIFRyYW5zYWN0aW9uCnslIGluY2x1ZGUgbGlzdC1zaW1wbGUtY2FwYWJpbGl0eXN0YXRlbWVudHMueGh0bWwgJX0="/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="7037"/>
            <contentType value="text/markdown"/>
            <content value="KipWYWxpZGF0b3IgUGFjayBhbmQgRGVmaW5pdGlvbnM6KioKClRoZSBmb2xsb3dpbmcgZmlsZSBjb250YWlucyBhbGwgdGhlIHZhbHVlIHNldHMsIHByb2ZpbGVzLCBleHRlbnNpb25zLCBsaXN0IG9mIHBhZ2VzIGFuZCB1cmxzIGluIHRoZSBJRywgZXRjIGRlZmluZWQgYXMgcGFydCBvZiB0aGUgdGhpcyBJbXBsZW1lbnRhdGlvbiBHdWlkZXMuOgoKLSBbVmFsaWRhdG9yIFBhY2tdKHZhbGlkYXRvci5wYWNrKQoKSW4gYWRkaXRpb24gdGhlcmUgYXJlIGZvcm1hdCBzcGVjaWZpYyBkZWZpbml0aW9ucyBmaWxlcy4KLSBbWE1MXShkZWZpbml0aW9ucy54bWwuemlwKQotIFtKU09OXShkZWZpbml0aW9ucy5qc29uLnppcCkKLSBbVFRMXShkZWZpbml0aW9ucy50dGwuemlwKQoKVGhlc2UgZmlsZXMgc2hvdWxkIGJlIHRoZSBmaXJzdCBjaG9pY2Ugd2hlbmV2ZXIgZ2VuZXJhdGluZyBhbnkgaW1wbGVtZW50YXRpb24gYXJ0aWZhY3RzIHNpbmNlIHRoZXkgY29udGFpbiBhbGwgb2YgdGhlIHJ1bGVzIGFib3V0IHdoYXQgbWFrZXMgdGhlc2UgZUlDUiBwcm9maWxlcyB2YWxpZC4gSW1wbGVtZW50ZXJzIHdpbGwgc3RpbGwgbmVlZCB0byBiZSBmYW1pbGlhciB3aXRoIHRoZSBjb250ZW50IG9mIHRoZSBzcGVjaWZpY2F0aW9uIGFuZCBwcm9maWxlcyB0aGF0IGFwcGx5IGluIG9yZGVyIHRvIG1ha2UgYSBjb25mb3JtYW50IGltcGxlbWVudGF0aW9uLiAgU2VlIHRoZSBvdmVydmlldyBvbiBbdmFsaWRhdGluZyBGSElSIHByb2ZpbGVzIGFuZCByZXNvdXJjZXNdKHt7IHNpdGUuZGF0YS5maGlyLnBhdGggfX0vdmFsaWRhdGlvbi5odG1sKQoKKipTY2hlbWF0cm9ucyoqIGFyZSBhbHNvIGF2YWlsYWJsZSBhbmQgbGlzdGVkIGJlbG93OgoKLSBbZWNyLWtub3dsZWRnZS1kaXN0cmlidXRpb24uc2NoXShlY3Ita25vd2xlZGdlLWRpc3RyaWJ1dGlvbi5zY2gpCi0gW2Vjci1vcmdhbml6YXRpb24uc2NoXShlY3Itb3JnYW5pemF0aW9uLnNjaCkKLSBbZWNyLXBhdGllbnQuc2NoXShlY3ItcGF0aWVudC5zY2gpCi0gW2Vjci1wcmFjdGl0aW9uZXJyb2xlLnNjaF0oZWNyLXByYWN0aXRpb25lcnJvbGUuc2NoKQotIFtlaWNyLWNvbXBvc2l0aW9uLnNjaF0oZWljci1jb21wb3NpdGlvbi5zY2gpCi0gW2VpY3ItY29uZGl0aW9uLnNjaF0oZWljci1jb25kaXRpb24uc2NoKQotIFtlaWNyLWVuY291bnRlci5zY2hdKGVpY3ItZW5jb3VudGVyLnNjaCkKLSBbZWljci1sb2NhdGlvbi5zY2hdKGVpY3ItbG9jYXRpb24uc2NoKQotIFtlaWNyLW9jY3VwYXRpb25oaXN0b3J5LnNjaF0oZWljci1vY2N1cGF0aW9uaGlzdG9yeS5zY2gpCi0gW2VpY3ItcHJvY2VkdXJlcmVxdWVzdC5zY2hdKGVpY3ItcHJvY2VkdXJlcmVxdWVzdC5zY2gpCi0gW2VpY3ItdHJhdmVsLWhpc3Rvcnkuc2NoXShlaWNyLXRyYXZlbC1oaXN0b3J5LnNjaCkKLSBbZXh0ZW5zaW9uLWVjci1vcmdhbml6YXRpb24uc2NoXShleHRlbnNpb24tZWNyLW9yZ2FuaXphdGlvbi5zY2gpCi0gW2V4dGVuc2lvbi1lY3ItcHJhY3RpdGlvbmVycm9sZS5zY2hdKGV4dGVuc2lvbi1lY3ItcHJhY3RpdGlvbmVycm9sZS5zY2gpCi0gW2V4dGVuc2lvbi1laWNyLW1hbnVhbGx5LWluaXRpYXRlZC1yZWFzb24uc2NoXShleHRlbnNpb24tZWljci1tYW51YWxseS1pbml0aWF0ZWQtcmVhc29uLnNjaCkKLSBbZXh0ZW5zaW9uLWVpY3ItdHJhdmVsLWhpc3RvcnktYWRkcmVzcy5zY2hdKGV4dGVuc2lvbi1laWNyLXRyYXZlbC1oaXN0b3J5LWFkZHJlc3Muc2NoKQotIFtleHRlbnNpb24tZWljci10cmlnZ2VyLWNvZGUtZmxhZy5zY2hdKGV4dGVuc2lvbi1laWNyLXRyaWdnZXItY29kZS1mbGFnLnNjaCkKLSBbZXh0ZW5zaW9uLXJyLWRldGVybWluYXRpb24tb2YtcmVwb3J0YWJpbGl0eS5zY2hdKGV4dGVuc2lvbi1yci1kZXRlcm1pbmF0aW9uLW9mLXJlcG9ydGFiaWxpdHkuc2NoKQotIFtleHRlbnNpb24tcnItZGV0ZXJtaW5hdGlvbi1vZi1yZXBvcnRhYmlsaXR5LXJlYXNvbi5zY2hdKGV4dGVuc2lvbi1yci1kZXRlcm1pbmF0aW9uLW9mLXJlcG9ydGFiaWxpdHktcmVhc29uLnNjaCkKLSBbZXh0ZW5zaW9uLXJyLWRldGVybWluYXRpb24tb2YtcmVwb3J0YWJpbGl0eS1ydWxlLnNjaF0oZXh0ZW5zaW9uLXJyLWRldGVybWluYXRpb24tb2YtcmVwb3J0YWJpbGl0eS1ydWxlLnNjaCkKLSBbZXh0ZW5zaW9uLXJyLWVpY3ItcHJvY2Vzc2luZy1zdGF0dXMuc2NoXShleHRlbnNpb24tcnItZWljci1wcm9jZXNzaW5nLXN0YXR1cy5zY2gpCi0gW2V4dGVuc2lvbi1yci1laWNyLXJlY2VpcHQtdGltZS5zY2hdKGV4dGVuc2lvbi1yci1laWNyLXJlY2VpcHQtdGltZS5zY2gpCi0gW2V4dGVuc2lvbi1yci1leHRlcm5hbC1yZXNvdXJjZS10eXBlLnNjaF0oZXh0ZW5zaW9uLXJyLWV4dGVybmFsLXJlc291cmNlLXR5cGUuc2NoKQotIFtleHRlbnNpb24tcnItbG9jYXRpb24tcmVsZXZhbmNlLnNjaF0oZXh0ZW5zaW9uLXJyLWxvY2F0aW9uLXJlbGV2YW5jZS5zY2gpCi0gW2V4dGVuc2lvbi1yci1tYW51YWxseS1pbml0aWF0ZWQtZWljci5zY2hdKGV4dGVuc2lvbi1yci1tYW51YWxseS1pbml0aWF0ZWQtZWljci5zY2gpCi0gW2V4dGVuc2lvbi1yci1wcmlvcml0eS5zY2hdKGV4dGVuc2lvbi1yci1wcmlvcml0eS5zY2gpCi0gW2V4dGVuc2lvbi1yci1yZXNwb25zaWJsZS1hZ2VuY3kuc2NoXShleHRlbnNpb24tcnItcmVzcG9uc2libGUtYWdlbmN5LnNjaCkKLSBbZXh0ZW5zaW9uLXJyLXJvdXRpbmctZW50aXR5LnNjaF0oZXh0ZW5zaW9uLXJyLXJvdXRpbmctZW50aXR5LnNjaCkKLSBbZXh0ZW5zaW9uLXJyLXJ1bGVzLWF1dGhvcmluZy1hZ2VuY3kuc2NoXShleHRlbnNpb24tcnItcnVsZXMtYXV0aG9yaW5nLWFnZW5jeS5zY2gpCi0gW2V4dGVuc2lvbi1yci1zdWJqZWN0LnNjaF0oZXh0ZW5zaW9uLXJyLXN1YmplY3Quc2NoKQotIFtleHRlbnNpb24tcnItc3VtbWFyeS5zY2hdKGV4dGVuc2lvbi1yci1zdW1tYXJ5LnNjaCkKLSBba25vd2xlZGdlLWRpc3RyaWJ1dGlvbi12YWx1ZXNldC1saWJyYXJ5LnNjaF0oa25vd2xlZGdlLWRpc3RyaWJ1dGlvbi12YWx1ZXNldC1saWJyYXJ5LnNjaCkKLSBbcHJlZ25hbmN5LXN0YXR1cy5zY2hdKHByZWduYW5jeS1zdGF0dXMuc2NoKQotIFtyci1jb21tdW5pY2F0aW9uLnNjaF0ocnItY29tbXVuaWNhdGlvbi5zY2gpCi0gW3JyLWVpY3ItcHJvY2Vzc2luZy1zdGF0dXMuc2NoXShyci1laWNyLXByb2Nlc3Npbmctc3RhdHVzLnNjaCkKLSBbcnItZWljci1wcm9jZXNzaW5nLXN0YXR1cy1yZWFzb24uc2NoXShyci1laWNyLXByb2Nlc3Npbmctc3RhdHVzLXJlYXNvbi5zY2gpCi0gW3JyLXJlbGV2YW50LXJlcG9ydGFibGUtY29uZGl0aW9uLXBsYW5kZWZpbml0aW9uLnNjaF0ocnItcmVsZXZhbnQtcmVwb3J0YWJsZS1jb25kaXRpb24tcGxhbmRlZmluaXRpb24uc2NoKQotIFtyci1yZXNwb25zaWJsZS1hZ2VuY3kuc2NoXShyci1yZXNwb25zaWJsZS1hZ2VuY3kuc2NoKQotIFtyci1yb3V0aW5nLWVudGl0eS5zY2hdKHJyLXJvdXRpbmctZW50aXR5LnNjaCkKLSBbcnItcnVsZXMtYXV0aG9yaW5nLWFnZW5jeS5zY2hdKHJyLXJ1bGVzLWF1dGhvcmluZy1hZ2VuY3kuc2NoKQoKKipFeGFtcGxlczoqKiBhbGwgdGhlIGV4YW1wbGVzIHRoYXQgYXJlIHVzZWQgaW4gdGhpcyBJbXBsZW1lbnRhdGlvbiBHdWlkZSBhdmFpbGFibGUgZm9yIGRvd25sb2FkOgoKLSBbWE1MXShleGFtcGxlcy54bWwuemlwKQotIFtKU09OXShleGFtcGxlcy5qc29uLnppcCkKLSBbVFRsXShleGFtcGxlcy50dGwuemlwKQo="/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="9009"/>
            <contentType value="text/markdown"/>
            <content value="PHVsPgoJPGxpPjxhIGhyZWY9ImRlc2lnbi1jb25zaWRlcmF0aW9ucy5odG1sIj5EZXNpZ24gQ29uc2lkZXJhdGlvbnM8L2E+PC9saT4KCTxsaT48YSBocmVmPSJuYXJyYXRpdmUtZ3VpZGFuY2UuaHRtbCI+RGVzaWduIENvbnNpZGVyYXRpb25zPC9hPjwvbGk+Cgk8bGk+PGEgaHJlZj0ibWFwcGluZ3MuaHRtbCI+TWFwcGluZ3M8L2E+PC9saT4KPC91bD4="/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="9636"/>
            <contentType value="text/markdown"/>
            <content value="IyMjIyBFeGlzdGluZyBDREEgRGVzaWduCgpUaGUgQ0RBIEVsZWN0cm9uaWMgQ2FzZSBSZXBvcnRpbmcgKGVDUikgc3RhbmRhcmRzOyB0aGUgZWxlY3Ryb25pYyBJbml0aWFsIENhc2UgUmVwb3J0IChlSUNSKSBhbmQgdGhlIFJlcG9ydGFiaWxpdHkgUmVzcG9uc2UgKFJSKSwgc3VwcG9ydCB0d28gYnJvYWQgYXBwcm9hY2hlcyB0byBlQ1IuCk9uZSBvZiB0aGUgYXBwcm9hY2hlcyBhbHNvIHVzZXMgdGhlIFJlcG9ydGFibGUgQ29uZGl0aW9uIEtub3dsZWRnZSBNYW5hZ2VtZW50IFN5c3RlbSAoUkNLTVMpIG9uIHRoZSBBc3NvY2lhdGlvbiBvZiBQdWJsaWMgSGVhbHRoIExhYm9yYXRvcmllcyAoQVBITCkgQUlNUyBwbGF0Zm9ybSB0byByZXBvcnQgdG8gUHVibGljIEhlYWx0aCBBZ2VuY2llcyAoUEhBcykgYW5kIG9uZSBkb2VzIG5vdC4gVGhlIHR3byBhcHByb2FjaGVzIGFyZToKCjEuIGluZm9ybWF0aW9uIGZsb3dpbmcgZnJvbSBoZWFsdGhjYXJlIHRvIFBIQXMgKHZpYSB0aGUgZUlDUikgYW5kIGJhY2sgKHZpYSB0aGUgUlIpCjIuIGluZm9ybWF0aW9uIGZsb3dpbmcgZnJvbSBoZWFsdGhjYXJlIHRvIEFJTVMvUkNLTVMgKHZpYSB0aGUgZUlDUikgYW5kIHRoZW4gdG8gUEhBcyAodmlhIHRoZSBlSUNSIGFuZCBzb21ldGltZXMgdGhlIFJSKSBhbmQgd2l0aCBhIHJlc3BvbnNlIHRvIGhlYWx0aGNhcmUgZnJvbSB0aGUgQUlNUy9SQ0tNUyAodmlhIHRoZSBSUikKCkluIHNvbWUganVyaXNkaWN0aW9ucyBIZWFsdGggSW5mb3JtYXRpb24gRXhjaGFuZ2VzIChISUVzKSBhbmQvb3IgSGVhbHRoIERhdGEgTmV0d29ya3MgbWF5IGFsc28gYmUgZW1wbG95ZWQgdG8gc2VjdXJlbHkgbW92ZSBkYXRhIGJldHdlZW4gb3JnYW5pemF0aW9ucy4KUkNLTVMgYW5kIHRoZSBBSU1TIHBsYXRmb3JtIHNlcnZlIHNldmVyYWwgcHVycG9zZXMgaW4gYXBwcm9hY2ggIzIuClByb21pbmVudCBhbW9uZyB0aGVzZSBwdXJwb3NlcyBpcyB0byBpbXBsZW1lbnQgcHVibGljIGhlYWx0aCByZXBvcnRpbmcgcnVsZXMgdGhhdCBjYW5ub3QgY3VycmVudGx5IGJlIHJlYWRpbHkgZGlzdHJpYnV0ZWQgdG8gaGVhbHRoY2FyZS4KVGhlIHJ1bGVzIGVuc3VyZSB0aGF0IHB1YmxpYyBoZWFsdGggYWdlbmNpZXMgb25seSBnZXQgdGhlIGRhdGEgdGhleSBhcmUgYXV0aG9yaXplZCB0byByZWNlaXZlIGJ5IHN0YXRlIGxhd3MuCldpdGhvdXQgbW9yZSBjb21wbGV4IHJlcG9ydGluZyBydWxlcyB0aGF0IGFyZSBkaXN0cmlidXRhYmxlIHRvLCBhbmQgZXhlY3V0YWJsZSBpbiwgaGVhbHRoY2FyZSBtb3N0IFBIQXMgd2lsbCBub3QgdXNlIGFwcHJvYWNoICMxLiBIZW5jZSwgdGhlc2UgYXBwcm9hY2hlcyBhcmUgcHJpbmNpcGFsbHkgcmVwcmVzZW50ZWQgYnkgZWl0aGVyICJSZW1vdGUgUnVsZXMiIG9yICJMb2NhbCBSdWxlcyIgaW4gdGhlIGZvbGxvd2luZyBkaWFncmFtLiAKCjxpbWcgc3JjPSJSZXBvcnRpbmdEZXNpZ25QYXR0ZXJuVjE3LkpQRyIgYWx0PSJSZXBvcnRpbmcgRGVzaWduIFBhdHRlcm4iIGNsYXNzPSJmaWd1cmUtaW1nLXBvcnRyYWl0IGltZy1yZXNwb25zaXZlIGltZy1yb3VuZGVkIGNlbnRlci1ibG9jayI+CgombmJzcDsKCiMjIyMgRkhJUiBEZXNpZ24gQ29uc2lkZXJhdGlvbnMKCkZISVIgZW5hYmxlcyBzZXZlcmFsIGhlbHBmdWwgY2FwYWJpbGl0aWVzIGZvciBlQ1IuCkJlY2F1c2UgcmVwb3J0YWJsZSBldmVudHMgb2NjdXIgaW4gaGVhbHRoY2FyZSB3aXRob3V0IFBIQSBrbm93bGVkZ2UgYW5kIGJlY2F1c2UgUEhBcyBkbyBub3QgaGF2ZSB0aGUgYXV0aG9yaXR5IHRvIHJlY2VpdmUgdGhlc2UgZGF0YSB1bnRpbCB0aGV5IGFyZSBkZWVtZWQgcmVwb3J0YWJsZSwgZUNSIHJlcXVpcmVzIGFuIHVuc29saWNpdGVkIHB1c2ggdHJhbnNhY3Rpb24uCkZISVIgb3Igb3RoZXIgbWVzc2FnaW5nIGFuZCBmbGV4aWJpbGl0eSBpbiBtdWx0aS1uZXR3b3JrIHRyYW5zcG9ydCB3aWxsIGJlIG5lZWRlZCB0byBnZXQgZGF0YSB0byBzdGF0ZS1sZXZlbCBhZ2VuY2llcy4KVG8gdGhlIHRyYW5zYWN0aW9ucyBhc3NvY2lhdGVkIHdpdGggdGhlIGFwcHJvYWNoZXMgbGlzdGVkIGFib3ZlLCB3ZSBoYXZlIGFkZGVkIGEgdHJhbnNhY3Rpb24gZm9yICJLbm93bGVkZ2UgRGlzdHJpYnV0aW9uIiBvZiBSZXBvcnRhYmxlIENvbmRpdGlvbiBUcmlnZ2VyIENvZGUgKFJDVEMpIHRyaWdnZXIgY29kZSB2YWx1ZSBzZXRzIGFuZCBvdGhlciByZXBvcnRpbmcgZ3VpZGFuY2UgZnJvbSBwdWJsaWMgaGVhbHRoIHRvIGhlYWx0aGNhcmUgdG8gc3VwcG9ydCByZXBvcnRpbmcgZnJvbSBFSFJzLgpUaGlzIEtub3dsZWRnZSBEaXN0cmlidXRpb24gdHJhbnNhY3Rpb24gaXMgc3VwcG9ydGVkIGJ5IEZISVIgc2VydmljZXMsIGJ1dCBFSFIgdXNlcnMgZG8gbm90IG5lZWQgdG8gYmUgdXNpbmcgRkhJUiB0byBhY2Nlc3MgaXQuCgpGSElSIGFsc28gb2ZmZXJzIHNldmVyYWwgcG9zc2liaWxpdGllcyBmb3IgZXZlbnR1YWxseSBkaXN0cmlidXRpbmcgbW9yZSBjb21wbGV4IHJlcG9ydGluZyBydWxlcyB0byBoZWFsdGhjYXJlLiBXaWRlbHkgaW1wbGVtZW50YWJsZSBkaXN0cmlidXRhYmxlIHJ1bGVzIHdvdWxkIGFsbGV2aWF0ZSB0aGUgbmVlZCBmb3IgcnVsZXMgcHJvY2Vzc2luZyBvbiBhbiBpbnRlcm1lZGlhdGUgcGxhdGZvcm0gYW5kIHByb3ZpZGUgZmxleGliaWxpdHkgaW4gaW5mb3JtYXRpb24gZmxvd3MuClRoZSBsb2NhbCBydWxlcyB3b3VsZCBvcGVyYXRlIHVuZGVyIGhlYWx0aGNhcmUgYXV0aG9yaXRpZXMgYW5kIG9ubHkgZGlzY2xvc2UgZGF0YSB0byBwdWJsaWMgaGVhbHRoIGFnZW5jaWVzIHRoYXQgYXJlIHNwZWNpZmllZCBieSBzdGF0ZSBsYXdzLgpUaGlzIHdvdWxkIGZhY2lsaXRhdGUgYXBwcm9hY2ggIzEgYWJvdmUuIExvY2FsIHJ1bGVzIG1pZ2h0IGJlIGltcGxlbWVudGVkIHRocm91Z2ggRkhJUiBDbGluaWNhbCBEZWNpc2lvbiBTdXBwb3J0IGFuZC9vciBBUEkgLSBiYXNlZCBydWxlcyBlbmdpbmVzIHRoYXQgY2FuIHByb2Nlc3MgQ1FMIG9yIG90aGVyIHN0YW5kYXJkcy1iYXNlZCBydWxlcy4gClRoZXJlIGFyZSBzdGlsbCBzZXZlcmFsIHBvc3NpYmlsaXRpZXMgZm9yIGhvdyB0aGUgdmFyaW91cyBlbGVtZW50cyBvZiBlQ1IgbWF5IGJlIGltcGxlbWVudGVkIHdpdGggZGlzdHJpYnV0YWJsZSBydWxlcy4KVHJpZ2dlcmluZyBiYXNlZCBvbiBkYXRhLCB3b3JrZmxvdywgb3IgdGltZWQgZXZlbnRzIG1heSBiZSBzdXBwb3J0ZWQgdGhvdWdoIEZISVIgU3Vic2NyaXB0aW9uIGluIHRoZSBFSFIsIHRob3VnaCBDRFMgSG9va3MsIGFuZC9vciB0aHJvdWdoIFNNQVJUIGNvbm5lY3RlZCBydWxlcyBlbmdpbmVzLgpTb21lIG9mIHRoZXNlIGFwcHJvYWNoZXMgd2lsbCB1c2UgdHJpZ2dlciBjb2RlcyBmb3IgdHJpZ2dlcmluZyBhbmQgb3RoZXJzIG1heSBub3QuCgpUaGUgS25vd2xlZGdlIERpc3RyaWJ1dGlvbiB0cmFuc2FjdGlvbiBuZWVkcyB0byBiZSBhYmxlIHRvIGhlbHAgb3JjaGVzdHJhdGUgdGhpcyByZXBvcnRpbmcgd2hpY2ggbWF5IHNwYW4gYSBicm9hZCBzcGVjdHJ1bSBmcm9tIHRyaWdnZXIgY29kZXMgaW4gYW4gRUhSIGFsbCB0aGUgd2F5IHRvIGEgaGVhbHRoY2FyZS1iYXNlZCBBUEkgY29ubmVjdGVkIHJ1bGVzIGVuZ2luZSB0aGF0IGlzIGV4dGVybmFsIHRvIHRoZSBFSFIsIGJ1dCBvcGVyYXRpbmcgaW5zaWRlIG9mIGhlYWx0aGNhcmUgb3IgYXQgYSBoZWFsdGhjYXJlIEJ1c2luZXNzIEFzc29jaWF0ZS4KVG8gYWNoaWV2ZSB0aGlzIG9yY2hlc3RyYXRpb24gdGhlIEtub3dsZWRnZSBEaXN0cmlidXRpb24gcmVzb3VyY2UgbmVlZHMgdG8gZ3VpZGUgdGhlIFRyaWdnZXJpbmcsIFJ1bGUgUHJvY2Vzc2luZywgQ2xpbmljYWwgRmVlZGJhY2ssIENyZWF0aW9uIG9mIGVJQ1IsIFJvdXRpbmcgYW5kIFNlbmRpbmcgY29tcG9uZW50cyBvZiBlQ1IgYW5kIGludGVyYWN0aW9ucyBiZXR3ZWVuIHRoZW0uCkZvciBzb21lIHRpbWUgbXVjaCBvZiB0aGUgS25vd2xlZGdlIERpc3RyaWJ1dGlvbiB0cmFuc2FjdGlvbiB3aWxsIHByb3ZpZGUgc3RydWN0dXJlIHRvIGVDUiBhcyBodW1hbiBjb25zdW1hYmxlIGd1aWRhbmNlLgpUaGUgbW9zdCBpbW1lZGlhdGVseSBtYWNoaW5lIHByb2Nlc3NhYmxlIGNvbXBvbmVudHMgYXJlIHRoZSBpbmNsdWRlZCB0cmlnZ2VyIGNvZGUgdmFsdWUgc2V0cy4KCldoZW4gZGlzdHJpYnV0YWJsZSBydWxlcyBjYW4gYmUgcHJvY2Vzc2VkIGluIG1vc3QgaGVhbHRoY2FyZSBzZXR0aW5ncywgdGhlcmUgd2lsbCBiZSBuZWVkcyB0byBkaXN0cmlidXRlIHRoZSBydWxlcywgdGhlIHRyaWdnZXIgY29kZXMsIGFuZCBsaW5rcyB0byByZWxldmFudCBvbi1saW5lIGNvbmRpdGlvbi1zcGVjaWZpYyBpbmZvcm1hdGlvbi4KVGhlIEtub3dsZWRnZSBEaXN0cmlidXRpb24gdHJhbnNhY3Rpb24gY2FuIGVuYWJsZSB0aGVzZSBkaXN0cmlidXRpb25zIGdvaW5nIGZvcndhcmQgYXMgd2VsbCBhcyBwcm92aWRlIGRldGFpbHMgZm9yIGhvdyBjcml0aWNhbCBlbGVtZW50cywgbGlrZSByZXBvcnQgdGltaW5nLCBvZiB0aGUgcmVwb3J0aW5nIHByb2Nlc3Mgc2hvdWxkIGJlIGltcGxlbWVudGVkLgpJdCB3aWxsIGFsc28gYWxsb3cgZm9yIGEgY29ubmVjdGlvbiB0byBzZXBhcmF0ZSBlZmZvcnRzIHRvIGRldmVsb3AgY2xpbmljYWwgZ3VpZGVsaW5lcyBmb3IgcHVibGljIGhlYWx0aCBjb25kaXRpb25zLiBSZXBvcnRpbmcgYW5kIGd1aWRlbGluZXMgc2hvdWxkIHV0aWxpemUgdGhlIHNhbWUgaW5mcmFzdHJ1Y3R1cmUgYW5kIGFwcHJvYWNoZXMgd2hlcmUgcG9zc2libGUgdG8gbWluaW1pemUgZGVtYW5kcyBvbiBFSFJzLgoKQXMgd2l0aCB0aGUgQ0RBIFJlcG9ydGFiaWxpdHkgUmVzcG9uc2UsIHRoZSBGSElSIHZlcnNpb24gbmVlZHMgdG8gYmUgcXVldWVhYmxlIGluIGhlYWx0aGNhcmUgcHJvdmlkZXIvcmVwb3J0ZXIgd29ya2Zsb3dzIGFuZCBiZSBhdHRhY2hhYmxlIHRvIGEgcGF0aWVudCBjaGFydCB3aGVuIHRoZXJlIGlzIGEgcmVwb3J0YWJsZSBvciBtYXliZSByZXBvcnRhYmxlIGNvbmRpdGlvbiBpZGVudGlmaWVkLgpBbHNvLCBsaWtlIHRoZSBDREEgUmVwb3J0YWJpbGl0eSBSZXNwb25zZSwgdGhlIEZISVIgdmVyc2lvbiBuZWVkcyB0byBiZSBhYmxlIHRvIGNvbnZleSB0cnVzdGVkIFB1YmxpYyBIZWFsdGggQWdlbmN5IHdlYi1saW5rcyBmb3IgbWFuYWdlbWVudCBhbmQgdHJlYXRtZW50IGd1aWRhbmNlIGluZm9ybWF0aW9uIGFzIHdlbGwgYXMgbGlua3MgZm9yIHdlYiBmb3JtcyB0aGF0IGVuYWJsZSBQSEEgYWNxdWlzaXRpb24gb2YgY2FzZSBpbnZlc3RpZ2F0aW9uIHN1cHBsZW1lbnRhbCBkYXRhIHRoYXQgbWF5IG5vdCBiZSByZWNvcmRlZCBpbiB0aGUgdHlwaWNhbCBwcm9jZXNzIG9mIGNhcmUuCkhJRSBSZXRyaWV2ZSBGb3JtIGZvciBEYXRhIENhcHR1cmUgKFJGRCkgd2ViIGZvcm1zIGhhdmUgYmVlbiBkZW1vbnN0cmF0ZWQgdG8gc3VwcG9ydCB0aGlzIGludmVzdGlnYXRpb24gc3VwcGxlbWVudGFsIGRhdGEgbmVlZC4gQXMgcmVwb3J0aW5nIHJ1bGVzIGJlY29tZSBkaXN0cmlidXRhYmxlIHRvIHJ1bGVzIGVuZ2luZXMgcnVubmluZyBpbiBoZWFsdGhjYXJlLCBpdCBtYXkgYmUgcG9zc2libGUgZm9yIEZISVIgUkVTVGZ1bCBxdWVyaWVzIGZyb20gdGhlIHJ1bGVzIGVuZ2luZSB0byB0aGUgRUhSIGluIG9yZGVyIHRvIHByb3ZpZGUgYWRkaXRpb25hbCBjb25kaXRpb24gYW5kL29yIGp1cmlzZGljdGlvbiBzcGVjaWZpYyBkYXRhLgo="/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="5179"/>
            <contentType value="text/markdown"/>
            <content value=""/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="9160"/>
            <contentType value="text/markdown"/>
            <content value="IyMjIyBlSUNSIE1hcHBpbmdzCgo8YSBocmVmPSJodHRwOi8vd3d3LmhsNy5vcmcvaW1wbGVtZW50L3N0YW5kYXJkcy9wcm9kdWN0X2JyaWVmLmNmbT9wcm9kdWN0X2lkPTQzNiI+SEw3IENEQSBSMiBJbXBsZW1lbnRhdGlvbiBHdWlkZTogUHVibGljIEhlYWx0aCBDYXNlIFJlcG9ydCwgUmVsZWFzZSAyIC0gVVMgUmVhbG0gLSB0aGUgRWxlY3Ryb25pYyBJbml0aWFsIENhc2UgUmVwb3J0IChlSUNSKTwvYT4gRGF0YSBFbGVtZW50cyB0byBGSElSIGVJQ1IgUHJvZmlsZXMKCjxhIGhyZWY9ImVpY3ItY29tcG9zaXRpb24tbWFwLmh0bWwiPmVJQ1IgTWFwcGluZ3M8L2E+CiAgCiMjIyMgUmVwb3J0YWJpbGl0eSBSZXNwb25zZSBNYXBwaW5ncwoKPGEgaHJlZj0iaHR0cDovL3d3dy5obDcub3JnL2ltcGxlbWVudC9zdGFuZGFyZHMvcHJvZHVjdF9icmllZi5jZm0/cHJvZHVjdF9pZD00NzAiPkhMNyBDREEgUjIgSW1wbGVtZW50YXRpb24gR3VpZGU6IFJlcG9ydGFiaWxpdHkgUmVzcG9uc2UsIFJlbGVhc2UgMSwgU1RVIFJlbGVhc2UgMS4wIC0gVVMgUmVhbG08L2E+IERhdGEgRWxlbWVudHMgdG8gRkhJUiBSZXBvcnRhYmlsaXR5IFJlc3BvbnNlIENvbW11bmljYXRpb24gUHJvZmlsZQoKPGEgaHJlZj0icnItY29tbXVuaWNhdGlvbi1tYXAuaHRtbCI+UlIgTWFwcGluZ3M8L2E+"/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="9053"/>
            <contentType value="text/markdown"/>
            <content value=""/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="8574"/>
            <contentType value="text/markdown"/>
            <content value=""/>
        </Binary>
    </contained>
    <contained>
        <Binary>
            <id value="8224"/>
            <contentType value="text/markdown"/>
            <content value="VGhlIEVsZWN0cm9uaWMgQ2FzZSBSZXBvcnRpbmcgKGVDUikgSW1wbGVtZW50YXRpb24gR3VpZGUgc3VwcG9ydHMgUmVwb3J0aW5nLCBpbnZlc3RpZ2F0aW9uLCBhbmQgbWFuYWdlbWVudCB2aWEgZWxlY3Ryb25pYyB0cmFuc21pc3Npb24gb2YgY2xpbmljYWwgZGF0YSBmcm9tIEVsZWN0cm9uaWMgSGVhbHRoIFJlY29yZHMgdG8gUHVibGljIEhlYWx0aCBBZ2VuY2llcywgYWxvbmcgd2l0aCB0aGUgbWFuYWdlbWVudCBhbmQgcHJvY2Vzc2luZyBvZiBwb3B1bGF0aW9uIGNhc2VzLiBUaHMgSUcgY292ZXJzIEJpLWRpcmVjdGlvbmFsIGluZm9ybWF0aW9uIGV4Y2hhbmdlIGFuZCB0cmlnZ2VyaW5nIGFuZCBkZWNpc2lvbiBzdXBwb3J0LgoKVGhpcyB0YWJsZSBwcm92aWRlcyBhIGxpc3Qgb2YgYWxsIHRoZSB2ZXJzaW9ucyBvZiBGSElSIHZlcnNpb25zIG9mIHRoZSB7e3NpdGUuZGF0YS5maGlyLmlnTmFtZX19IEltcGxlbWVudGF0aW9uIEd1aWRlIHRoYXQgYXJlIGF2YWlsYWJsZS4gU2VlIFtGSElSIFJlbGVhc2VzIGFuZCBWZXJzaW9uaW5nXShodHRwOi8vYnVpbGQuZmhpci5vcmcvdmVyc2lvbnMuaHRtbCN2ZXJzaW9ucykgZm9yIGEgZGVzY3JpcHRpb24gb2YgaG93IHRoZSB2ZXJzaW9uaW5nIG9mIHRoaXMgSW1wbGVtZW50YXRpb24gR3VpZGUgaXMgbWFuYWdlZC4gIEFzIHdlbGwsIHRoaXMgZ3VpZGUgZm9sbG93IHRoZSBnZW5lcmFsIGRlZmluaXRpb25zIGFuZCBndWlkZWxpbmVzIG91dGxpbmVkIGluIFtSdWxlcyBmb3IgSW50ZXItdmVyc2lvbiBjaGFuZ2VdKGh0dHA6Ly9idWlsZC5maGlyLm9yZy92ZXJzaW9ucy5odG1sI2NoYW5nZSk6Cgp8RGF0ZXxWZXJzaW9ufERlc2NyaXB0aW9ufAp8LS0tfC0tLXwtLS18CnwqKkN1cnJlbnQgVmVyc2lvbnMqKnwKfG4vYXxuL2F8Tm8gcHVibGlzaGVkIHZlcnNpb24geWV0fAp8W2N1cnJlbnRdKGh0dHA6Ly9idWlsZC5maGlyLm9yZy9pZy9ITDcvY2FzZS1yZXBvcnRpbmcvaW5kZXguaHRtbCl8KGxhc3QgY29tbWl0KXxDdXJyZW50IERldmVsb3BtZW50IGJ1aWxkIChtYXkgYmUgaW5jb2hlcmVudCBhbmQgY2hhbmdlIHJhcGlkbHkpfAp8KipTVFUgMSBzZXF1ZW5jZSoqfAp8W0phbnVhcnkgMjAxOF0oaHR0cDovL2hsNy5vcmcvZmhpci91di9lY3IvMjAxOEphbi9pbmRleC5odG1sKXwwLjEuMHwgUmVsZWFzZSAwLjEuMCAoU1RVMSkgZmlyc3QgYmFsbG90IChEcmFmdCBmb3IgQ29tbWVudCl8CnxbU2VwdGVtYmVyIDIwMThdKGh0dHA6Ly9obDcub3JnL2ZoaXIvdXMvZWNyLzIwMThTZXAvaW5kZXguaHRtbCl8MC4xLjB8IFJlbGVhc2UgMC4xLjAgKFNUVTEpIHNlY29uZCBiYWxsb3QgKFNUVSBSMSl8"/>
        </Binary>
    </contained>
    <url value="http://hl7.org/fhir/us/ecr/ImplementationGuide/hl7-fhir-us-ecr"/>
    <version value="1.0.0"/>
    <name value="ElectronicCaseReporting"/>
    <status value="draft"/>
    <experimental value="false"/>
    <publisher value="HL7 Public Health Work Group (http://www.hl7.org/Special/committees/pher/index.cfm)"/>
    <description value="# Introduction and Purpose&#xA;With the adoption and maturing of Electronic Health Records (EHRs) there are opportunities to better support public health surveillance as well as the delivery of relevant public health information to clinical care. Electronic Case Reporting (eCR) can provide more complete and timely case data, support disease / condition monitoring, and assist in outbreak management and control. It can also improve bidirectional communications through the delivery of public health information in the context of a patients condition and local disease trends and by facilitating ad hoc communications. eCR will also reduce healthcare provider burden by automating the completion of legal reporting requirements.&#xA;&#xA;With the advent of FHIR standards, there is a need for FHIR implementation guidance to specify appropriate resources and transactions needed for the eCR process. FHIR offers opportunities to further enable automated triggering and reporting of cases from EHRs, to ease implementation and integration, to support the acquisition of investigation supplemental data, and to connect public health information (e.g., guidelines) and clinical workflow. Over time, FHIR may also support the distribution of reporting rules to clinical care to better align data authorities and make broader clinical data available to public health decision support services inside the clinical care environment.&#xA;&#xA;# Relationship to Other Standards&#xA;There is an existing [HL7 CDA R2 Electronic Initial Case Report (eICR) Standard for Trial Use (STU)](http://www.hl7.org/implement/standards/product_brief.cfm?product_id=436) to be used for all-jurisdiction, all-condition reporting to public health agencies from EHRs. The eICR was created from a Council of State and Territorial Epidemiologists (CSTE) Task Force recommendation that identified necessary data to support case reporting. There also is an existing [HL7 CDA R2 Reportability Response (RR) STU](http://www.hl7.org/implement/standards/product_brief.cfm?product_id=470) implementation guide that supports several functions for providing information back to clinical care in response to received eICRs.&#xA;&#xA;In a January 2018 there was an HL7 FHIR eCR for comment ballot consisting of FHIR versions of the following transactions: eICR, the RR, and a specification / subscription service for knowledge distribution (trigger code value set bundle). These specifications were tested at the January, 2018 HL7 FHIR Connectathon. A fourth transaction for web form-based acquisition of public health case investigation supplemental data has been demonstrated and piloted.&#xA;&#xA;This current FHIR electronic case reporting STU implementation guide (hereby known as FHIR eCR) includes all of the eICR, RR, and the knowledge distribution / trigger codes transactions in FHIR form. Web form-based requests for case investigation and supplemental data are enabled by, but not specified in, this implementation guide. Transforms will be made available to facilitate the conversion of eICR and RR transactions between CDA and FHIR formats.&#xA;&#xA;# Stakeholders&#xA;* Regulatory Agencies&#xA;* Standards Development Organizations&#xA;* Vendors: EHR, PHR; Health Care IT; Clinical Decision Support Systems, Public Health Surveillance Systems&#xA;* Providers: Ambulatory and Healthcare Institutions (hospitals, long term care, mental health)&#xA;* Local, State, Tribal and Federal Public Health Agencies"/>
    <fhirVersion value="3.0.1"/>
    <package>
        <name value="base"/>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/eicr-condition"/>
                <display value="eicr-condition"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/ecr-patient"/>
                <display value="ecr-patient"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-eicr-processing-status"/>
                <display value="extension-rr-eicr-processing-status"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-eicr-travel-history-address"/>
                <display value="extension-eicr-travel-history-address"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-eicr-trigger-code-flag"/>
                <display value="extension-eicr-trigger-code-flag"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-priority"/>
                <display value="extension-rr-priority"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-external-resource-type"/>
                <display value="extension-rr-external-resource-type"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-determination-of-reportability-rule"/>
                <display value="extension-rr-determination-of-reportability-rule"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-determination-of-reportability-reason"/>
                <display value="extension-rr-determination-of-reportability-reason"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-determination-of-reportability"/>
                <display value="extension-rr-determination-of-reportability"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-summary"/>
                <display value="extension-rr-summary"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-subject"/>
                <display value="extension-rr-subject"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-manually-initiated-eicr"/>
                <display value="extension-rr-manually-initiated-eicr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-eicr-manually-initiated-reason"/>
                <display value="extension-eicr-manually-initiated-reason"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-location-relevance"/>
                <display value="extension-rr-location-relevance"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-eicr-receipt-time"/>
                <display value="extension-rr-eicr-receipt-time"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-rules-authoring-agency"/>
                <display value="extension-rr-rules-authoring-agency"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-responsible-agency"/>
                <display value="extension-rr-responsible-agency"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-rr-routing-entity"/>
                <display value="extension-rr-routing-entity"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-ecr-organization"/>
                <display value="extension-ecr-organization"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/ecr-practitionerrole"/>
                <display value="ecr-practitionerrole"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/extension-ecr-practitionerrole"/>
                <display value="extension-ecr-practitionerrole"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/rr-relevant-reportable-condition-plandefinition"/>
                <display value="rr-relevant-reportable-condition-plandefinition"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/rr-communication"/>
                <display value="rr-communication"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/eicr-travel-history"/>
                <display value="eicr-travel-history"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/eicr-procedurerequest"/>
                <display value="eicr-procedurerequest"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/eicr-occupationhistory"/>
                <display value="eicr-occupationhistory"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/eicr-location"/>
                <display value="eicr-location"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/eicr-encounter"/>
                <display value="eicr-encounter"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/eicr-composition"/>
                <display value="eicr-composition"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/ecr-organization"/>
                <display value="ecr-organization"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/rr-eicr-processing-status"/>
                <display value="rr-eicr-processing-status"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/rr-eicr-processing-status-reason"/>
                <display value="rr-eicr-processing-status-reason"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/rr-responsible-agency"/>
                <display value="rr-responsible-agency"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/rr-rules-authoring-agency"/>
                <display value="rr-rules-authoring-agency"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/rr-routing-entity"/>
                <display value="rr-routing-entity"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/ecr-knowledge-distribution"/>
                <display value="ecr-knowledge-distribution"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="StructureDefinition/knowledge-distribution-valueset-library"/>
                <display value="knowledge-distribution-valueset-library"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/location-relevance-ecr"/>
                <display value="location-relevance-ecr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/eicr-processing-status-ecr"/>
                <display value="eicr-processing-status-ecr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/eicr-processing-status-reason-ecr"/>
                <display value="eicr-processing-status-reason-ecr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/eicr-processing-status-reason-detail-type-ecr"/>
                <display value="eicr-processing-status-reason-detail-type-ecr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/reportability-priority-ecr"/>
                <display value="reportability-priority-ecr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/external-resource-type-ecr"/>
                <display value="external-resource-type-ecr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/determination-of-reportability-ecr"/>
                <display value="determination-of-reportability-ecr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/geographical-location-history"/>
                <display value="geographical-location-history"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/ostc"/>
                <display value="ostc"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/oes"/>
                <display value="oes"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/lrtc"/>
                <display value="lrtc"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/lotc"/>
                <display value="lotc"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="ValueSet/dxtc"/>
                <display value="dxtc"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="CodeSystem/oes"/>
                <display value="oes"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="CapabilityStatement/server"/>
                <display value="server"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="false"/>
            <sourceReference>
                <reference value="CapabilityStatement/client"/>
                <display value="client"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Bundle/ecr-bundle-knowledge-distribution"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Composition/eicr-composition-zika"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Communication/rr-communication-single-single"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Condition/eicr-condition-eve-everywoman-common-cold"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Condition/eicr-condition-eve-everywoman-pertussis"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Encounter/eicr-encounter-eve-everywoman-20180401"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Encounter/eicr-encounter-diagnosis-eve-everywoman-20180401"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Immunization/phcase-pneumo"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Location/ecr-location-salem-medical-center"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="MedicationStatement/us-core-medicationstatement-eve-everywoman-azithromycin"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Observation/us-core-observation-results-eve-everywoman-lymphocytes"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Observation/rr-eicr-processing-status"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Observation/rr-eicr-processing-status-reason"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Observation/eicr-travel-history-eve-everywoman-201801"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Observation/eicr-travel-history-eve-everywoman-201610"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Observation/eicr-travel-history-eve-everywoman-1999"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Observation/eicr-occupation-history-eve-everywoman"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Organization/ecr-organization-health-authority-west"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Organization/rr-organization-routing-entity-haw"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Organization/rr-organization-rules-authoring-agency-haw"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Organization/rr-organization-responsible-agency-haw"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Organization/ecr-organization-acme-labs"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Organization/ecr-organization-salem-medical-center"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Patient/ecr-patient-eve-everywoman"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="PlanDefinition/rr-plan-zika-state-department-of-health"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="ProcedureRequest/eicr-procedurerequest-zika"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="ProcedureRequest/eicr-procedurerequest-eve-everywoman-zika"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="PractitionerRole/ecr-practitionerrole-henry-seven"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Practitioner/ecr-practitioner-henry-seven"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Bundle/eicr-bundle-zika"/>
                <display value="eicr-bundle-zika"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Bundle/ecr-bundle-message-zika"/>
                <display value="ecr-bundle-message-zika"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Task/ecr-task-ehr-requested-eicr"/>
                <display value="ecr-task-ehr-requested-eicr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="MessageHeader/ecr-message-header-ehr-requested-eicr"/>
                <display value="ecr-message-header-ehr-requested-eicr"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Organization/ecr-organization-ymca"/>
                <display value="YMCA"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Endpoint/ecr-endpoint-salem-medical-center"/>
                <display value="ecr-endpoint-salem-medical-center"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Endpoint/ecr-endpoint-ymca"/>
                <display value="ecr-endpoint-ymca"/>
            </sourceReference>
        </resource>
        <resource>
            <example value="true"/>
            <sourceReference>
                <reference value="Device/ecr-device-software-ymca"/>
                <display value="ecr-device-software-ymca"/>
            </sourceReference>
        </resource>
    </package>
    <page>
        <source value="toc.md"/>
        <title value="Table of Contents"/>
        <kind value="toc"/>
        <format value="markdown"/>
        <page>
            <source value="profiles.md"/>
            <title value="Profiles, Extensions &amp; Transactions"/>
            <kind value="page"/>
            <format value="markdown"/>
        </page>
        <page>
            <source value="terminology.md"/>
            <title value="Terminology"/>
            <kind value="page"/>
            <format value="markdown"/>
        </page>
        <page>
            <source value="capstatements.md"/>
            <title value="Capability Statements"/>
            <kind value="page"/>
            <format value="markdown"/>
        </page>
        <page>
            <source value="downloads.md"/>
            <title value="Downloads"/>
            <kind value="page"/>
            <format value="markdown"/>
        </page>
        <page>
            <source value="implementationguidance.md"/>
            <title value="Implementation Guidance"/>
            <kind value="page"/>
            <format value="markdown"/>
            <page>
                <source value="design-considerations.md"/>
                <title value="Design Considerations"/>
                <kind value="page"/>
                <format value="markdown"/>
            </page>
            <page>
                <source value="narrative-guidance.md"/>
                <title value="Narrative Guidance"/>
                <kind value="page"/>
                <format value="markdown"/>
            </page>
            <page>
                <source value="mappings.md"/>
                <title value="Mappings"/>
                <kind value="page"/>
                <format value="markdown"/>
                <page>
                    <source value="eicr-composition-map.md"/>
                    <title value="eICR Mappings"/>
                    <kind value="page"/>
                    <format value="markdown"/>
                </page>
                <page>
                    <source value="rr-communication-map.md"/>
                    <title value="Reportability Response Mappings"/>
                    <kind value="page"/>
                    <format value="markdown"/>
                </page>
            </page>
        </page>
        <page>
            <source value="history.md"/>
            <title value="History"/>
            <kind value="page"/>
            <format value="markdown"/>
        </page>
    </page>
</ImplementationGuide>